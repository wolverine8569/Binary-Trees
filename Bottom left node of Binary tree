void fn(TreeNode* root,int i,int d,map<int,pair<int,int>>&mp){
        if(root==NULL)
            return;
        if(mp.count(i)==0)
        mp[i]={d,root->val};
        else if(mp[i].first<d)
            mp[i]={d,root->val};
        fn(root->left,i-1,d+1,mp);
        fn(root->right,i+1,d+1,mp);
    }
    int findBottomLeftValue(TreeNode* root) {
       queue<TreeNode*>q;
        q.push(root);
        while(!q.empty()){
            int n=q.size();
            TreeNode* y=q.front();
            for(int i=0;i<n;i++){
                TreeNode* x=q.front();
                q.pop();
                if(x->left)
                    q.push(x->left);
                if(x->right)
                    q.push(x->right);
            }
            if(q.empty())
                return y->val;
            
        }
        return -1;
    }
